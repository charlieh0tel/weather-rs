name: Build and Release

on: push

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            artifact_name: weather-rs-linux-x86_64

          - os: ubuntu-22.04
            target: aarch64-unknown-linux-gnu
            artifact_name: weather-rs-linux-aarch64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Update apt
        run: |
          sudo apt-get update -y

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get install -y \
            pkg-config \
            llvm-dev \
            libclang-dev \

      - name: Install build dependencies (!aarch64)
        if: matrix.target != 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get install -y \
            libasound2-dev \
            libespeak-ng-dev

      - name: Install build dependencies (aarch64)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo dpkg --add-architecture arm64
          cat <<EOF | sudo tee /etc/apt/sources.list.d/arm64-ports.list
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports jammy main universe multiverse restricted
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports jammy-updates main universe multiverse restricted
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports jammy-security main universe multiverse restricted
          EOF
          sudo apt-get update || :;
          sudo apt-get install -y \
            pkg-config \
            gcc-aarch64-linux-gnu \
            g++-aarch64-linux-gnu \
            crossbuild-essential-arm64 \
            libasound2-dev:arm64 \
            libespeak-ng-dev:arm64

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Install cargo deb
        run: cargo install cargo-deb

      - name: Build executable (!aarch64)
        if: matrix.target != 'aarch64-unknown-linux-gnu'
        run: |
          cargo build --release --target ${{ matrix.target }}
          cargo deb --profile release --target ${{ matrix.target }}

      - name: Build executable (aarch64)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
          PKG_CONFIG_PATH: /usr/lib/aarch64-linux-gnu/pkgconfig:/usr/share/pkgconfig
          PKG_CONFIG_ALLOW_CROSS: 1
        run: |
          cargo build --release --target ${{ matrix.target }}
          cargo deb --profile release --target ${{ matrix.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: target/debian/*.deb

  release:
    name: Create GitHub Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        
      - name: Consolidate artifacts
        run: |
          mkdir release_assets
          cp -p */*.deb release_assets

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: release_assets/*
